name: DO-Assignment-1-CI

on:
  push:
    branches:
      - main

jobs:
  clone:
    name: Clone
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: source-code
          path: .

  sonar-scan:
    name: Sonar scan
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source-code
          path: .
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-scan:
    name: Snyk scan
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source-code
          path: .
      - name: Install Python and all dependencies
        run: sudo apt-get update -y && sudo apt-get install -y python3 python3-pip && pip install -r src/requirements.txt
      - name: Setup Snyk
        uses: snyk/actions/setup@master
      - name: Run Snyk
        run: snyk test --file=src/requirements.txt
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  doker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ sonar-scan, snyk-scan ]
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source-code
          path: .
      - name: Build Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/devops-assignment:${{ github.sha }} .
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{ secrets.DOCKER_USERNAME }}/devops-assignment:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
      - name: Upload Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/devops-assignment:${{ github.sha }}
